plugins {
    id 'fabric-loom' version '1.10-SNAPSHOT' apply false  //Fabric loom，已经配制好的
    id 'maven-publish' //如果不想发布到maven可以删掉

    // 主角
    // https://github.com/ReplayMod/preprocessor
    // https://github.com/Fallen-Breath/preprocessor
    id 'com.replaymod.preprocess' version '0a04a5668b'

    // Shadow Jar
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
}

version = project.mod_version
group = project.maven_group

preprocess {
    strictExtraMappings.set(false)

    def mc12104 = createNode("1.21.4", 1_21_04, "")
    def mc12105 = createNode("1.21.5", 1_21_05, "")
    def mc12107 = createNode("1.21.7", 1_21_07, "")

    // link的起点一定要是主项目，向上向下link均可
    // mapping文件稍后会讲，这里先新建一个
    // 也可以不用mapping，不用的话就把file()改成null
    mc12105.link(mc12104, file("versions/mapping_12105_12104.txt"))
    mc12105.link(mc12107, file("versions/mapping_12105_12107.txt"))

}

// 收拢所有版本的jar文件
// 这个非常必要，项目构建时都应该用这个任务而非自带的build
// 当然，单独一个子项目的构建除外
tasks.register('buildAndGather') {
    subprojects {
        dependsOn project.tasks.named('build').get()
    }
    doFirst {
        println 'Gathering builds'
        def buildLibs = {
            p -> p.buildDir.toPath().resolve('libs')
        }
        delete fileTree(buildLibs(rootProject)) {
            include '*'
        }
        subprojects {
            copy {
                from(buildLibs(project)) {
                    include '*.jar'
                    exclude '*-dev.jar', '*-sources.jar', '*-shadow.jar'
                }
                into buildLibs(rootProject)
                duplicatesStrategy DuplicatesStrategy.INCLUDE
            }
        }
    }
}